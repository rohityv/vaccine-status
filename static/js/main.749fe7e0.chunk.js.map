{"version":3,"sources":["components/PieChart.js","components/Table.js","components/Buttons.js","App.js","index.js"],"names":["PieChart","data","vaccineDate","currentDate","console","log","options","labels","datasets","label","backgroundColor","hoverOffset","height","StyledTable","style","color","className","map","dateComparison","Date","vaccination_date","getTime","person_name","person_id","increment","decrement","selectedButton","setSelectedButton","useState","onClick","reducer","state","action","type","App","dispatch","React","useReducer","personInfo","setCurrentDate","setVaccineDate","useEffect","getData","axios","get","then","res","catch","err","message","current_date","yPerson","filter","el","Buttons","d1","d2","month","getMonth","toString","padStart","newDate","getDate","getFullYear","textAlign","length","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.749fe7e0.chunk.js","sourcesContent":["import { Pie } from \"react-chartjs-2\";\r\n\r\nconst PieChart = ({ data, vaccineDate, currentDate}) => {\r\n  /* \r\n    data: An Array of two numbers \r\n    [no. of people vaccinated, no. of people not vaccinated]\r\n  */\r\n\r\n  console.log(vaccineDate)\r\n  console.log(currentDate)\r\n\r\n  const options = {\r\n    labels: [\"Vaccinated\", \"Not Vaccinated\"],\r\n    datasets: [\r\n      {\r\n        label: \"My First Dataset\",\r\n        data: data,\r\n        backgroundColor: [\"rgb(255, 99, 132)\", \"rgb(54, 162, 235)\"],\r\n        hoverOffset: 4\r\n      }\r\n    ],\r\n    height: \"50%\"\r\n  };\r\n  return <Pie data={options} />;\r\n};\r\n\r\nexport default PieChart;\r\n","export default function StyledTable({vaccineDate, currentDate}) {\r\n  \r\n  console.log(vaccineDate)\r\n  console.log(currentDate)\r\n\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr style={{ backgroundColor: \"#737373\", color: \"white\" }}>\r\n          <th>Name</th>\r\n          <th>Vaccination Date</th>\r\n          <th>Vaccination Status</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr className=\"vaccinated\">\r\n          <td>John Doe</td>\r\n          <td>2021-05-03</td>\r\n          <td>Vaccine Done</td>\r\n        </tr>\r\n        <tr className=\"pending\">\r\n          <td>Jane Doe</td>\r\n          <td>2021-05-23</td>\r\n          <td>Vaccine Pending</td>\r\n        </tr>\r\n        {/* new code  */}\r\n        {vaccineDate.map((data) => {\r\n          let dateComparison = new Date(data.vaccination_date).getTime() <= new Date(currentDate).getTime();\r\n          \r\n          return (\r\n            <tr key={data.person_id} className={`${dateComparison ? \"vaccinated\" : \"pending\"}`}>\r\n              <td>{data.person_name ? data.person_name : \"No Name\"}</td>\r\n              <td>{data.vaccination_date ? data.vaccination_date : \"No Date\"}</td>\r\n              <td>{dateComparison ? \"Vaccine Done\" : \"Vaccine Pending\"}</td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport default function ({vaccineDate, currentDate, increment, decrement}) {\r\n  const [selectedButton, setSelectedButton] = useState(null);\r\n  console.log(currentDate)\r\n\r\n  return (\r\n    <>\r\n      <button onClick = {decrement}>-</button>\r\n      {/* <p> {currentDate.toDateString()} </p> */}\r\n      <p> {currentDate} </p>\r\n      <button onClick = {increment}>+</button>\r\n    </>\r\n  );\r\n}\r\n","{/*\n  PLEASE BEGIN THIS BY READING THE README.md FILE\n*/}\n\nimport axios from \"axios\";\nimport \"./styles.css\";\nimport PieChart from \"./components/PieChart\";\nimport StyledTable from \"./components/Table\";\nimport Buttons from \"./components/Buttons\";\nimport React, {useState, useEffect} from \"react\";\n\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"incement\":\n      return { currentDate: state.currentDate + 1 };\n    case \"decrement\":\n      return { currentDate: state.currentDate - 1 };\n    default:\n      return state;\n  }\n};\n\nexport default function App() {\n  const [state, dispatch] = React.useReducer(reducer, {\n    // currentDate: new Date(),\n    personInfo: []\n  });\n  \n\n  // New code \n\n  const [currentDate, setCurrentDate] = useState('')\n  const [vaccineDate, setVaccineDate] = useState([])\n  \n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    axios\n      .get(\"data/vaccine_dates.json\")\n      .then((res) => {\n        console.log(res.data);\n        setVaccineDate(res.data);\n      })\n      .catch((err) => console.log(err.message));\n    axios\n      .get(\"data/current_date.json\")\n      .then((res) => {\n        console.log(res.data[0].current_date);\n        setCurrentDate(res.data[0].current_date);\n      })\n      .catch((err) => console.log(err.message));\n  };\n\n  function increment(){\n    let d1 = new Date(currentDate)\n    let d2 = new Date(d1.getTime() + 86400000)\n\n    let month = (d2.getMonth()+1).toString().padStart(2, '0')\n    let newDate = d2.getDate().toString().padStart(2, '0') \n\n    setCurrentDate(`${d2.getFullYear()}-${month}-${newDate}`)\n  }\n\n  function decrement(){\n    let d1 = new Date(currentDate)\n    let d2 = new Date(d1.getTime() - 86400000)\n    \n    let month = (d2.getMonth()+1).toString().padStart(2, '0')\n    let newDate = (d2.getDate()).toString().padStart(2, '0') \n\n    setCurrentDate(`${d2.getFullYear()}-${month}-${newDate}`)\n  }\n\n  let yPerson = vaccineDate.filter( el => (new Date(el.vaccination_date).getTime() <= new Date(currentDate).getTime()))\n  console.log(yPerson)\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"chart\">\n        <PieChart data={[60, 40]} vaccineDate = {vaccineDate} currentDate = {currentDate} />\n      </div>\n      <div className=\"buttons\">\n        <Buttons vaccineDate = {vaccineDate} currentDate = {currentDate} increment = {increment} decrement = {decrement} />\n      </div>\n      <b style={{ textAlign: \"center\" }}>\n        X = {vaccineDate.length} out of Y = {yPerson.length} persons have been vaccinated.\n      </b>\n      <div className=\"table\">\n        <StyledTable vaccineDate = {vaccineDate} currentDate = {currentDate} />\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}